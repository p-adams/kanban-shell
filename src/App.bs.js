// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as MenuScreen from "./MenuScreen.bs.js";
import * as BoardsScreen from "./BoardsScreen.bs.js";

function App(Props) {
  var match = React.useState(function () {
        return "";
      });
  var setPrompt = match[1];
  var prompt = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setCommandErrors = match$1[1];
  var commandErrors = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var commandWarnings = match$2[0];
  var match$3 = React.useState(function () {
        return /* DEFAULT */0;
      });
  var setCurrentShellTab = match$3[1];
  var tmp;
  switch (match$3[0]) {
    case /* DEFAULT */0 :
        tmp = React.createElement(React.Fragment, undefined);
        break;
    case /* MENU */1 :
        tmp = React.createElement(MenuScreen.make, {});
        break;
    case /* BOARDS */2 :
        tmp = React.createElement(BoardsScreen.make, {});
        break;
    
  }
  return React.createElement("div", {
              className: "terminal"
            }, React.createElement("header", undefined, React.createElement("div", undefined, React.createElement("span", {
                          className: "close"
                        }), React.createElement("span", {
                          className: "min"
                        }), React.createElement("span", {
                          className: "max"
                        })), React.createElement("h3", {
                      className: "terminal-title"
                    }, "Kanban Shell")), React.createElement("main", undefined, React.createElement("section", {
                      className: "prompt"
                    }, React.createElement("div", {
                          className: "wrapper"
                        }, React.createElement("span", undefined, "IP address @:"), React.createElement("form", {
                              onSubmit: (function (e) {
                                  e.preventDefault();
                                  var match = prompt.toUpperCase();
                                  if (match === "MENU") {
                                    return Curry._1(setCurrentShellTab, (function (param) {
                                                  return /* MENU */1;
                                                }));
                                  } else {
                                    return Curry._1(setCommandErrors, (function (param) {
                                                  return "invalid command";
                                                }));
                                  }
                                })
                            }, React.createElement("input", {
                                  className: "input-prompt",
                                  autoFocus: true,
                                  value: prompt,
                                  onChange: (function (e) {
                                      Curry._1(setPrompt, e.target.value);
                                      Curry._1(setCurrentShellTab, (function (param) {
                                              return /* DEFAULT */0;
                                            }));
                                      return Curry._1(setCommandErrors, (function (param) {
                                                    return "";
                                                  }));
                                    })
                                }))), commandErrors.length > 0 || commandWarnings.length > 0 ? React.createElement("div", {
                            className: "prompt-feedback"
                          }, commandErrors, commandWarnings) : React.createElement(React.Fragment, undefined)), tmp));
}

var make = App;

export {
  make ,
  
}
/* react Not a pure module */
